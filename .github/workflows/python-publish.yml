# Github Action workflow for static analysis (flake8),
# testing (pytest), and publishing to PyPi.

name: CI/CD

on:
  push:
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.15
      - name: Install dependencies
        run: poetry install
      - name: Flake8
        run: |
          poetry run flake8 --count --select=E9,F63,F7,F82 --show-source --statistics --extend-exclude=node_modules
          poetry run flake8 --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics --extend-exclude=node_modules
      - name: Pylint
        run: |
          poetry run pylint pylambdarest
      - name: mypy
        run: |
          poetry run mypy -p pylambdarest
      - name: Pytest
        run: |
          poetry run coverage run -m --source=pylambdarest pytest tests
          poetry run coverage report
      - name: Coveralls
        run: poetry run coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  publish:
    needs: test
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.15
      - name: Build and publish
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD --build
